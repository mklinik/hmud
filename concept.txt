A simple MUD where you can't do much.

Written in Haskell.

It's intended to jazz up XMPP multi user chat rooms with some funny stories.
Every participant in the group chat is assigned a randomly generated character.
People can move to different rooms, pick up items and give items to each other.
Nothing more and nothing less. Maybe some funny situations arise if the game
provides odd characters, locations and items.

- People chat with each other using the group chat, like without the game.
- The game is a participant in the room, too. It's called "oracle"
- Every time a new user enters the room, the oracle greets the user in public
- To enter commands to the game, open a private conversation with the oracle
- If someone gives an item to a player, the oracle sends the player a private
  message

- there are rooms, items and characters
- every room, item and character has a description
- the description of items is static
- the description of rooms is a static text plus the list characters plus the
  list of items plus the list of possible exits
- the description of characters depends on equipment and stats
- names of things can be abbreviated
- every player has:
  - stats
  - an inventory (with objects)
  - equipped objects
- stats are:
  - level
  - gender
  - race (Human, Elven, Dwarf)
  - role (Knight, Wizard, King, etc)

  Narr / Närrin
  Zauber / Zauberin
  Dieb / Diebin
  Knecht / Magd
  Fischer / Fischerin
  Bauer / Bäuerin
  Schmied / Schmiedin
  Händler / Händlerin
  Priester / Priesterin
  Krieger / Kriegerin
  Feldherr / Feldherrin
  Prinz / Prinzessin
  König / Königin

commands:
  look [<thing>]
   - without argument, look at the current room
   - with argument: print the description of rooms, items or characters
  goto <room-name>
   - go to a different room. Only possible if <room-name> is adjacent to the
     current room
  pickup
   - pickup an item from the current room
  put
   - put an item in the current room
  give <item> to <character>
   - give an item from your inventory to another character
